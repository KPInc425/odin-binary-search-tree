(()=>{const e=e=>({root:e,leftNode:null,rightNode:null}),t=l=>{let o=l.length,r=Math.floor(o/2);if(r<0&&(r=0),0==o)return null;let n=e(l[r]),d=l.slice(0,r);n.leftNode=t(d);let u=l.slice(r+1,o);return n.rightNode=t(u),n},l=(t,o)=>{let r=t;return null===t?e(o):(o<r.root?r.leftNode=l(r.leftNode,o):r.rightNode=l(r.rightNode,o),t)},o=(e,t)=>{let l=e;if(null===l)return console.error("There is no node with that value!");if(l.root===t){if(null===l.leftNode&&null===l.rightNode)return null;if(null===l.leftNode)l=l.rightNode;else if(null===l.rightNode)l=l.leftNode;else{let e=r(l.rightNode);l.root=e.root,e=o(l.rightNode,l.root)}return l}return t<l.root?l.leftNode=o(l.leftNode,t):l.rightNode=o(l.rightNode,t),e},r=e=>{let t=e;return null===t.leftNode||(t=r(t.leftNode)),t},n=(e,t)=>e-t,d=(e,t="",l=!0)=>{null!==e.rightNode&&d(e.rightNode,`${t}${l?"│   ":"    "}`,!1),console.log(`${t}${l?"└── ":"┌── "}${e.root}`),null!==e.leftNode&&d(e.leftNode,`${t}${l?"    ":"│   "}`,!0)};let u=(e=>{let l=(e=>{let t=e.sort(n),l=new Set(t);return t=Array.from(l),t})([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]);return t(l)})(),N=l(u,52);N=l(N,4269),N=l(N,4280),N=l(N,5269),N=l(N,6269);let i=o(N,4280);d(i),console.log(((e,t)=>{let l=[];if(null===e)return null;const o=(e,t)=>{e&&(l[t]?l[t].push(e.root):l[t]=[e.root],o(e.leftNode,t+1),o(e.rightNode,t+1))};return o(e,0),l})(i))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,